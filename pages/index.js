import Head from 'next/head'
import { Block, Lock } from '@mui/icons-material';
import { BookOnline } from '@mui/icons-material';
import { AttachMoney } from '@mui/icons-material';
import Blocks from '../components/Blocks';
import Astro from '../public/astronaut.png';
import Image from 'next/image';
import Attribute from '../components/Attribute';
import TokenAuth from '../public/tokenAuth.jpg';
import blicket from '../public/blicket.png';
import band from '../public/band.png';
import match from '../public/match.png';
import Footer from '../components/Footer';
import { initializeApp } from "firebase/app";
import { getDatabase, set, ref } from "firebase/database";



export default function Home() {

  const firebaseConfig = {
    apiKey: process.env.NEXT_PUBLIC_GOOGLE_API_KEY,
    authDomain: process.env.NEXT_PUBLIC_GOOGLE_AUTHDOMAIN,
    databaseURL: process.env.NEXT_PUBLIC_GOOGLE_DATABASE_URL,
    projectId: "blicket-landing",
    storageBucket: "blicket-landing.appspot.com",
    messagingSenderId: "887873133766",
    appId: "1:887873133766:web:dff83861542347c39bcbc7",
    measurementId: "G-BF5TB459GM"
  };

  // Initialize Firebase
  const firebaseApp = initializeApp(firebaseConfig);
  const userUID = () => {
    return 'xxxx-xxxx-xxx-xxxx'.replace(/[x]/g, (c) => {
      const r = Math.floor(Math.random() * 16);
      return r.toString(16);
    })
  }
  const writeUserData = async (e) => {
    e.preventDefault()
    const email1 = document.getElementById('email-1').value;
    console.log(`EMAIL: ${email1}`)
    const email2 = document.getElementById('email-2').value;
    console.log(`EMAIL: ${email2}`)
    const db = getDatabase(firebaseApp);
    console.log(`DATABASE CREATED`);
    const userUid = userUID()
    console.log(`User id:${userUid}`)
    try {
      if (email1) await set(ref(db, 'users/' + userUid), { email: email1 });
      if (email2) await set(ref(db, 'users/' + userUid), { email: email2 });
      alert('Nos pondremos en contacto contigo pronto');
    } catch(error){
      console.log(error.toString());
      alert('Sucedio un error. Intenta más tarde!')
    }
    
  }
  return (
    <div className=''>
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <Head>
        <title>Bliket</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
      </Head>
      <div className='w-full bg-primary-100'>
        <div className='grid grid-cols-5'>
          <div className='col-span-2 w-3/4 my-auto mx-auto lg:col-span-1'>
            <Image src={Astro} />
          </div>
          <div className='col-span-3 flex h-full lg:col-span-4 '>
            <h1 className='my-auto text-6xl text-white font-extrabold lg:text-7xl'>Bliket</h1>
          </div>
        </div>
        <div className='p-5'>
          <div className='grid grid-cols-5'>
            <div className='col-span-3'>
              <h1 className='text-3xl text-white font-semibold lg:text-6xl lg:font-extrabold'>Trascendiendo experiencias digitales</h1>
              <h2 className='text-lg text-white font-extralight mt-2 lg:text-4xl lg:mt-10'>Te ayudamos a digitalizar tu evento</h2>
            </div>
            <div className='col-span-2 relative'>
              <Image src={blicket} objectFit='contain' />
            </div>
          </div>
          <h2 className='text-lg text-primary-100 font-extralight mt-2 lg:text-primary-100'>Te ayudamos a digitalizar tu evento</h2>
          <form onSubmit={(e) => { writeUserData(e) }} className='grid grid-cols-9 mt-4 gap-2'>
            <input className='col-span-5 rounded-full px-3 py-1 h-10 lg:col-span-7' type='text' placeholder='Dejanos tu email...' id='email-1'></input>
            <button className=' col-span-4 rounded-full bg-primary-500 px-2 py-0.5 text-xl text-white font-semibold lg:col-span-2' type="submit">Contactar</button>
          </form>
          <div className='lg:grid grid-cols-3 gap-5 mt-16'>
            <div className='mt-20 lg:mt-px'>
              <Blocks label='Acceso seguro' icon={<Lock fontSize='inherit' />} />
            </div>
            <Blocks label='Controla el mercado secundario' icon={<AttachMoney fontSize='inherit' />} />
            <Blocks label='Emite NFTs como tickets' icon={<BookOnline fontSize='inherit' />} />
          </div>
          <div>
            <Attribute title='Ingreso Extra' subtitle=' Monetiza el mercado secundario y obtén más recursos para futuras inversiones.' left={false} image={band} />
            <Attribute title='Eventos Inolvidables' subtitle='Digitaliza las entradas de tus eventos emitiendo NFTs como tickets, permitiendo a los que asisten guardar su experiencia para siempre' left={true} image={match} />
            <Attribute title='Autenticidad de Boletos' subtitle='Al validar los tickets en el blockchain, aseguramos que no haya falsificación de los mismos, ofreciéndote control sobre accesos e historial de transacciones.' left={false} image={TokenAuth} />
          </div>
          <div className='grid place-items-center'>
            <h1 className='text-white text-4xl text-center font-bold'>Crea tu evento ahora</h1>
            <h2 className='text-white text-xl text-center font-extralight mt-4'>Dejanos tu mail y nos pondremos en contacto contigo para digitalizar tu evento</h2>
            <form className='w-full grid place-items-center mt-4' onSubmit={(e) => { writeUserData(e) }}>
              <input className=' w-4/5 inline-block rounded-2xl py-2 px-1' placeholder='Dejanos tu mail' id='email-2'></input>
              <button className=' inline-block rounded-full bg-primary-500 px-4 py-0.5 text-2xl text-white font-semibold mt-6' type='submit'>Contactar</button>
            </form>
          </div>
        </div>
        <Footer />
      </div>


    </div >
  );
}

